setwd("E:\DataScience_2019501123\datamining\DM Assignment2")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
data <- read.csv("firstdata.csv", header = F)
data <- read.csv("firstdata.csv", header = FALSE)
data <- read.csv("myfirstdata.csv", header = FALSE)
head(data)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
data <- read.csv("myfirstdata.csv", header = FALSE)
head(data)
c(is.factor(data[,1]), is.numeric(data[,1]))
c(is.factor(data[,1]), is.numeric(data[,1]))
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
which.nonnumeric <- function(column){
which(is.na(suppressWarnings(as.numeric(as.character(column)))))
}
for (name in names(data)){
c <- data[[name]]
r <- which.nonnumeric(C)
v <- c[r]
msg <- ''
if (length(v)) {
msg <- sprintf("d$%s is qualitative (%s[%d] == '%s')", name, name, r, as.character(v))
} else {
msg <- sprintf("d$%s is quantitive (all rows are numeric)", name)
}
print(msg)
}
which.nonnumeric <- function (column) {
which(is.na(suppressWarnings(as.numeric(as.character(column)))))
}
for (name in names(data)) {
c <- data[[name]]
r <- which.nonnumeric(c)
v <- c[r]
msg <- ''
if (length(v)) {
msg <- sprintf("data$%s is qualitative (%s[%d] == '%s')", name, name, r, as.character(v))
} else {
msg <- sprintf("data$%s is quantitive (all rows are numeric)", name)
}
print(msg)
}
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
plot (data[,1], main="Values of V1")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
plot (data[,1], main="Values of V1")
plot (data[,2], main="Values of V2")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
data <- read.csv("twomillion.csv",header = FALSE)
samp <- sample(seq(1,length(data[,1])), 10000, replace=T)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#b
my_sample<-data[samp,1]
mean(my_sample)
max(my_sample)
var(my_sample)
quantile(my_sample)
quantile(my_sample, .25)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#c
mean(data[,1])
max(data[,1])
var(data[,1])
quantile((data[,1]), .25)
#how much would be the diffrence
abs(mean(my_sample)-mean(data[,1]))
abs(max(my_sample)-max(data[,1]))
abs(var(my_sample)-var(data[,1]))
abs(quantile(my_sample, .25)-quantile(data[,1], .25))
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#d
write.csv(my_sample,"my_sample.csv")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
ca_data <-read.csv("CA_house_prices.csv",header=FALSE)
ca_data <-read.csv("CA_house_prices.csv",header=FALSE)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
ca_data <-read.csv("CA_house_prices.csv",header=FALSE)
oh_data <-read.csv("OH_house_prices.csv",header=FALSE)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#b
boxplot(ca_data[,1],oh_data[,1],col="blue",main="Taheniyath",names =c("ca houses", "Ohio houses"),ylab="Prices(in thousands)")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#c
hist(ca_data[,1]*1000,breaks=seq(0,3500000,by=500000),col="green",xlab="Prices",ylab="Frequency",main="Taheniyath")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#c
plot(ecdf(ca_data[,1]),verticals = TRUE,do.p=FALSE,main ="Taheniyath",xlab="Prices(in thousands)",ylabs="Frequency")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#
plot(ecdf(ca_data[,1]), verticals=TRUE,do.p = FALSE, main = "Taheniyath",xlab="Prices(in thousands)",ylab="Frequency")
lines(ecdf(oh_data[,1]),verticals= TRUE,do.p = FALSE,col.h="red",col.v="green",lwd=4)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#
plot(ecdf(ca_data[,1]),verticals = TRUE,do.p=FALSE,main ="Taheniyath",xlab="Prices(in thousands)",ylabs="Frequency")
lines(ecdf(ca_data[,1]),verticals = TRUE,do.p=FALSE,col.h="red",col.v="green",lwd=4)
legend(2100,.6,c("CA Houses","OH Houses"),col=c("black","green"),lwd=c(1,4))
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#
plot(ecdf(ca_data[,1]),verticals = TRUE,do.p=FALSE,main ="Taheniyath",xlab="Prices(in thousands)",ylabs="Frequency")
lines(ecdf(oh_data[,1]),verticals = TRUE,do.p=FALSE,col.h="red",col.v="green",lwd=4)
legend(2100,.6,c("CA Houses","OH Houses"),col=c("black","green"),lwd=c(1,4))
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#a
football<-read.csv("football.csv",header=TRUE)
plot(football[,2],football[,3],xlim=c(0,12),ylim=c(0,12),pch=15,col="blue",xlab="2003 Wins",ylab="2004 Wins",main="Football Wins")
#c
cor(football[,2],football[,3])
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#d
cor(football[,2],football[,3]+10)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#e
cor(football[,2],football[,3]*2)
#f
cor(football[,2],football[,3]*-2)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#a
median(oh_data[,1])
mean(oh_data[,1])
#c
median(oh_data[,1]+10)
#d
median(oh_data[,1]+2)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#a
ages <= c (19,23,30,30,45,25,24,20)
sd(ages)
#c
sd(ages+10)
#d
sd(ages*10)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#a
ages <- c (19,23,30,30,45,25,24,20)
sd(ages)
#c
sd(ages+10)
#d
sd(ages*10)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
which.nonnumeric <- function (column) {
which(is.na(suppressWarnings(as.numeric(as.character(column)))))
}
for (name in names(data)) {
c <- data[[name]]
r <- which.nonnumeric(c)
v <- c[r]
msg <- ''
if (length(v)) {
msg <- sprintf("data$%s is qualitative (%s[%d] == '%s')", name, name, r, as.character(v))
} else {
msg <- sprintf("data$%s is quantitive (all rows are numeric)", name)
}
print(msg)
}
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
din(sonar_test)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
dim(sonar_test)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
dim(sonar_test)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
dim(sonar_test)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
dim(sonar_test)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#a
median(oh_data[,1])
mean(oh_data[,1])
#c
median(oh_data[,1]+10)
#d
median(oh_data[,1]+2)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
#a
median(oh_data[,1])
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment2")
oh_data <-read.csv("OH_house_prices.csv")
#a
median(oh_data[,1])
mean(oh_data[,1])
#c
median(oh_data[,1]+10)
#d
median(oh_data[,1]+2)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
options(warn=-1)
#install.packages("randomForest")
library("randomForest")
install.packages("randomForest")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
options(warn=-1)
#install.packages("randomForest")
library("randomForest")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment4")
test<-read.csv("sonar_test.csv", header=FALSE)
train<-read.csv("sonar_train.csv", header=FALSE)
y<-as.factor(train[,61])
x<-train[,1:60]
y_test<-as.factor(test[,61])
x_test<-test[,1:60]
library(rpart)
fit<- rpart(y~.,x,control=rpart.control(minsplit=0,minbucket=0,cp=-1, maxcompete=0, maxsurrogate=0, usesurrogate=0, xval=0,maxdepth=5))
error = 1-sum(y_test==predict(fit,x_test, type="class"))/length(y_test)
cat("Misclassification Error:",error)
library(randomForest)
fit<-randomForest(x,y)
error_rate = 1-sum(y==predict(fit,x))/length(y)
cat("Misclassification Error rate:",error_rate)
#8a
library(class)
fit_train<-knn(x,x,y,k=5)
train_error = 1-sum(y==fit_train)/length(y)
cat("Train Error rate:",train_error)
fit_test<-knn(x,x_test,y,k=5)
test_error= 1-sum(y_test==fit_test)/length(y_test)
cat("\n Test Error rate:",test_error)
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment5")
data<-read.csv("sonar_test.csv", header=FALSE)
#2
x<-data[,1:2]
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment5")
options(warn=-1)
data<-read.csv("sonar_test.csv", header=FALSE)
setwd("E:\DataScience_2019501123\datamining\DM Assignment5")
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment5")
options(warn=-1)
data<-read.csv("sonar_test.csv", header=FALSE)
#2
x<-data[,1:2]
setwd("E:\\DataScience_2019501123\\datamining\\DM Assignment5")
options(warn=-1)
data<-read.csv("sonar_test.csv", header=FALSE)
#2
x<-data[,1:2]
plot(x,pch=19,xlab=expression(x[1]), ylab=expression(x[2]))
fit<-kmeans(x, 2)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
plot(x,pch=19,xlab=expression(x[1]), ylab=expression(x[2]))
y<-data[,61]
points(x,col=2+2*y,pch=19)
1-sum(knnfit==y)/length(y)
