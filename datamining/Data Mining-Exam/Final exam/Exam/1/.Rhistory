str(sample3000)
```{r}
setwd("E:/DataScience_2019501123/datamining/Data Mining-Exam/Final exam/Exam/1")
index_data<-read.csv("BSE_Sensex_Index.csv", header = TRUE)
str(index_data)
library(dplyr)
#open, High, low, close, volume, adj close diff column
new_data = mutate(index_data, open_diff = lead((lag(Open) - Open) / Open), high_diff = lead((lag(High) - High) / High), low_diff = lead((lag(Low) - Low) / Low), close_diff = lead((lag(Close) - Close) / Close), vol_diff = lead((lag(Volume) - Volume) / Volume), adj_diff = lead((lag(Adj_Close) - Adj_Close) / Adj_Close))
new_data
#adding last row value to open_diff
lastcol = nrow(new_data)
a = new_data$open_diff[lastcol-1]
setwd("E:/DataScience_2019501123/datamining/Data Mining-Exam/Final exam/Exam/1")
index_data<-read.csv("BSE_Sensex_Index.csv", header = TRUE)
str(index_data)
library(dplyr)
#open, High, low, close, volume, adj close diff column
new_data = mutate(index_data, open_diff = lead((lag(Open) - Open) / Open), high_diff = lead((lag(High) - High) / High), low_diff = lead((lag(Low) - Low) / Low), close_diff = lead((lag(Close) - Close) / Close), vol_diff = lead((lag(Volume) - Volume) / Volume), adj_diff = lead((lag(Adj_Close) - Adj_Close) / Adj_Close))
setwd("E:/DataScience_2019501123/datamining/Data Mining-Exam/Final exam/Exam/5")
liver_data<-read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver_data)
liver_data$selector <- as.factor(liver_data$selector)
liver_data$drinks <- cut(liver_data$drinks, breaks = c(0, 5,10,15,20), labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver_data <- na.omit(liver_data)
train = subset(liver_data, liver_data$selector == 1)
str(train)
test = subset(liver_data, liver_data$selector == 2)
str(test)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(test, select = -c(selector, drinks))
y_train = train[,6, drop = TRUE]
y_test = test[,6, drop = TRUE]
#library for svm
library(e1071)
#misclassification error for training set
fit = svm(x_train, y_train)
1-sum(y_train==predict(fit,x_train))/length(y_train)   #0.2027
#misclassification error for test set
fit = svm(x_test, y_test)
1-sum(y_test==predict(fit,x_test))/length(y_test)    #0.265
setwd("E:/DataScience_2019501123/datamining/Data Mining-Exam/Final exam/Exam/6")
liver_data<-read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
library(corrplot)
result = cor(liver_data)
corrplot(result)
x = liver_data[, c("mcv", "gammagt")]
y = liver_data[, "drinks"]
plot(x,pch = 19,xlab = expression(x[1]),ylab = expression(x[2]), xlim=c(80,100), ylim=c(0,200))
corrplot(result)
x = liver_data[, c("mcv", "gammagt")]
y = liver_data[, "drinks"]
plot(x,pch = 19,xlab = expression(x[1]),ylab = expression(x[2]), xlim=c(80,100), ylim=c(0,200))
plot(x$mcv,y,xlim=c(60,100),ylim=c(0,20),pch=18,col="blue",xlab="mcv",ylab="drinks",main="dependency of mcv on drinks")
x = liver_data[, c("mcv", "gammagt")]
y = liver_data[, "drinks"]
plot(x,pch = 19,xlab = expression(x[1]),ylab = expression(x[2]), xlim=c(80,100), ylim=c(0,200))
plot(x$mcv,y,xlim=c(60,100),ylim=c(0,20),pch=18,col="blue",xlab="mcv",ylab="drinks",main="dependency of mcv on drinks")
plot(x$gammagt,y,xlim=c(0,100),ylim=c(0,20),pch=19,col="blue",xlab="mcv",ylab="drinks",main="dependency of gammagt on drinks")
fit = kmeans(x, 4)
plot(x, col=fit$cluster, xlim=c(80,100), ylim=c(0,200))
points(fit$center, col='red', pch=19, cex=2)
setwd("E:/DataScience_2019501123/datamining/Data Mining-Exam/Final exam/Exam/7")
liver_data<-read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(data)
x_data = liver_data[,1:5]
y_data = liver_data[,6]
#misclassification error rate
fit = kmeans(x,4)
library(class)
knnfit = knn(fit$centers,x,as.factor(c(1,2,3,4)))
1-sum(knnfit == y)/length(y)
setwd("E:/DataScience_2019501123/datamining/Data Mining-Exam/Final exam/Exam/8")
data<-read.csv("BSE_Sensex_Index.csv", header = TRUE)
#create successive growth rate column
library(dplyr)
new_data = mutate(data, succ_grate = lead((lag(Close) - Close) / Close))
#last row in successive growth rate column
lastcol = nrow(new_data)
a = new_data$succ_grate[lastcol-1]
b = new_data$succ_grate[lastcol-2]
c = new_data$succ_grate[lastcol-3]
new_data$succ_grate[lastcol] = mean(a,b,c)
#calculating z-scores
succ_grate_mean <- mean(new_data$succ_grate, na.rm=TRUE)
ssucc_grate_std <- sd(new_data$succ_grate,na.rm=TRUE)
z<-(new_data[,8] - succ_grate_mean) / ssucc_grate_std
sort(z)
new_data$zscores <- z
#Dates of the outliers
dates<-subset(new_data[,1],  new_data[,"zscores"] >= 3.0 | new_data[,"zscores"] <= -3.0)
dates
View(dates)
setwd("E:/DataScience_2019501123/datamining/Data Mining-Exam/Final exam/Exam/1")
index_data<-read.csv("BSE_Sensex_Index.csv", header = TRUE)
str(index_data)
library(dplyr)
#open, High, low, close, volume, adj close diff column
new_data = mutate(index_data, open_diff = lead((lag(Open) - Open) / Open), high_diff = lead((lag(High) - High) / High), low_diff = lead((lag(Low) - Low) / Low), close_diff = lead((lag(Close) - Close) / Close), vol_diff = lead((lag(Volume) - Volume) / Volume), adj_diff = lead((lag(Adj_Close) - Adj_Close) / Adj_Close))
